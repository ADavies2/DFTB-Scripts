The scripts in this folder are for generated BoltzTrapp data from DFTB+ calculations
I did not originally write dftb2vasp.py, Generate-Bt2.py or tau_epw.py
I have edited the original files, produced by a collaborator of Dr. Oliveira and Masoumeh Mahmoudi, into command line executable scripts
These three scripts can be copied into your ~/bin and made into executables with the following command:
chmod u+x ~/bin/<SCRIPTNAME>
Where <SCRIPTNAME> should be changed for each file
This will allow one to run these scripts as executables from any location without needing them in the same directory
Be sure that you have installed the BoltzTrapp2 Python package before running the following steps

This README contains the instructions for using the scripts

1. Be sure that you have converted the DFTB+ .gen file into a .vasp format and named it POSCAR
This can be done using the gen-to-POSCAR.py script within this GitHub repo.

2. within the same directory, copy the following DFTB+ outputs:
<JOBNAME>.log, band.out, detailed.out, and geo_end.xyz (DFTB+ .xyz output file)

3. Run the following command:
dftb2vasp.py 
There will be a user prompted input to which you should respond with <JOBNAME>.log

4. Copy energies.boltztrap into COF.energy
Delete the first line of COF.energy and replace it with the following:
BoltzTraP eigen-energies file generated by VASP.
Edit the second line to read the following after the number corresponding to the number of k-points:
    <NUMBER>      1   0     ! nk, nspin, Fermi level(Ry) : energies below in R

5. Copy hte.struct into COF.structure
cat the DFTB+ .xyz output file into COF.structure. For example...
cat geo_end.xyz >> COF.structure

6. Within COF.structure, delete the last four lines from hte.structure. They may look something like this:
1
1 0 0
0 1 0
0 0 1
Now, line five should be the total number of atoms, followed by a line per atom with the species, x, y, and z coordinates

7. Run tau_epw.py with the following command:
tau_epw.py
There will be two user-prompted inputs: the first is the number of bands and the second is the number of k-points

6. Now, run Generate-Bt2.py with the following command:
Generate-Bt2.py

7. For the final step, run the following command. 
btp2 -vv integrate COF_BLZTRP.bt2 300:310:10
