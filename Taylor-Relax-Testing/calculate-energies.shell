#!/bin/bash

# Declare an associative array for the atomic/gaseous phase energy for each element (calculated so far)
declare -A ATOMIC_ENERGY
ATOMIC_ENERGY[C]=-38.055
ATOMIC_ENERGY[H]=-6.4926
ATOMIC_ENERGY[N]=-57.2033
ATOMIC_ENERGY[O]=-83.9795
ATOMIC_ENERGY[S]=-62.3719
ATOMIC_ENERGY[Br]=-79.5349
ATOMIC_ENERGY[F]=-115.2462
ATOMIC_ENERGY[Cl]=-84.1056
ATOMIC_ENERGY[K]=-2.3186

# Declare an associative array for the reference state energy for each element (calculated so far)
declare -A REFERENCE_ENERGY
REFERENCE_ENERGY[C]=-44.1197
REFERENCE_ENERGY[H]=-9.1083
REFERENCE_ENERGY[N]=-65.4249
REFERENCE_ENERGY[O]=-87.7172
REFERENCE_ENERGY[S]=-65.7086
REFERENCE_ENERGY[Br]=-81.167
REFERENCE_ENERGY[F]=-117.3936
REFERENCE_ENERGY[Cl]=-86.2041
REFERENCE_ENERGY[K]=-3.4933

calculate_energies () {
# $1 = $GEO
  printf "$1\ntmp-POSCAR" | gen-to-POSCAR.py
  GEO='tmp-POSCAR'
  ATOM_TYPES=($(sed -n 6p $GEO))
  N_TYPES=($(sed -n 7p $GEO))
  N_ATOMS=0
  for i in ${N_TYPES[@]}; do
    let N_ATOMS+=$i
    done

  E_atom=0
  E_ref=0
  count=0
  for element in ${ATOM_TYPES[@]}; do
    E_atom=$(echo $E_atom+${ATOMIC_ENERGY[$element]}*${N_TYPES[$count]} | bc)
    E_ref=$(echo $E_ref+${REFERENCE_ENERGY[$element]}*${N_TYPES[$count]} | bc)
    ((count++))
  done

  DETAILED=($(grep "Total energy" detailed.out))
  TOTAL_ENERGY=${DETAILED[4]}

  COHESIVE=$(echo "scale=3; ($E_atom - $TOTAL_ENERGY) / $N_ATOMS" | bc)
  ENTHALPY=$(echo "scale=3; ($TOTAL_ENERGY - $E_ref) / $N_ATOMS" | bc)

  cat > Energies.dat <<!
E(COH) $COHESIVE eV
H(f) $ENTHALPY eV
!

  rm tmp-POSCAR
}

GEN=$1

calculate_energies $GEN